import 'package:locall_app/core/types/auth_with_provider.dart';
import 'package:locall_app/src/domain/entities/channel.dart';
import 'package:locall_app/src/domain/entities/comment.dart';
import 'package:locall_app/src/domain/entities/location.dart';
import 'package:locall_app/src/domain/entities/post.dart';
import 'package:locall_app/src/domain/entities/report.dart';
import 'package:locall_app/src/domain/entities/story.dart';

class User {
  const User({
    required this.id,
    required this.username,
    required this.email,
    required this.location,
    required this.distance,
    required this.points,
    required this.provider,
    required this.official,
    required this.isDeleted,
    required this.isBanned,
    required this.isAdmin,
    required this.autoGeneratedUsername,
    required this.usernameChangeCounter,
    required this.createdAt,
    this.providerId,
    this.channels,
    this.posts,
    this.storys,
    this.comments,
    this.reports,
    this.reporteds,
    this.deviceType,
    this.deviceId,
  });

  User.empty()
      : this(
          id: '',
          channels: [
            Channel.empty(),
          ],
          location: Location.empty(),
          distance: 3,
          isAdmin: false,
          isBanned: false,
          isDeleted: false,
          official: false,
          points: 369,
          username: 'test',
          email: 'empty@empty.com',
          autoGeneratedUsername: false,
          usernameChangeCounter: 1,
          provider: AuthWithProvider.local,
          createdAt: DateTime.parse('2024-02-10T14:38:36.936Z'),
        );

  final String id;
  final String username;
  final String email;
  final List<Channel>? channels;
  final Location location;
  final int distance;
  final int points;
  final bool official;
  final bool isDeleted;
  final bool isBanned;
  final bool isAdmin;
  final AuthWithProvider provider;
  final String? providerId;
  final List<Post>? posts;
  final List<Story>? storys;
  final List<Comment>? comments;
  final List<Report>? reports;
  final List<Report>? reporteds;
  final String? deviceType;
  final String? deviceId;
  final DateTime? createdAt;
  final bool autoGeneratedUsername;
  final int usernameChangeCounter;
}
