// Mocks generated by Mockito 5.4.4 from annotations
// in locall_app/test/src/application/gps_status/cubit/gps_status_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:geolocator/geolocator.dart' as _i6;
import 'package:locall_app/core/errors/failures.dart' as _i5;
import 'package:locall_app/src/domain/usecases/gps_status/get_gps_status_usecase.dart'
    as _i7;
import 'package:locall_app/src/domain/usecases/gps_status/watch_gps_status_usecase.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WatchGpsStatusUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchGpsStatusUsecase extends _i1.Mock
    implements _i3.WatchGpsStatusUsecase {
  MockWatchGpsStatusUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i2.Either<_i5.Failure, _i6.ServiceStatus>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i4.Stream<_i2.Either<_i5.Failure, _i6.ServiceStatus>>.empty(),
      ) as _i4.Stream<_i2.Either<_i5.Failure, _i6.ServiceStatus>>);
}

/// A class which mocks [GetGpsStatusUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetGpsStatusUsecase extends _i1.Mock
    implements _i7.GetGpsStatusUsecase {
  MockGetGpsStatusUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.LocationPermission>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.LocationPermission>>.value(
                _FakeEither_0<_i5.Failure, _i6.LocationPermission>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.LocationPermission>>);
}
